// 문제 : 평행
// 점 네 개의 좌표를 담은 이차원 배열  dots가 다음과 같이 매개변수로 주어집니다.
// 
// [[x1, y1], [x2, y2], [x3, y3], [x4, y4]]
// 주어진 네 개의 점을 두 개씩 이었을 때, 두 직선이 평행이 되는 경우가 있으면 1을 없으면 0을 return 하도록 solution 함수를 완성해보세요.
// 
// 제한사항
// dots의 길이 = 4
// dots의 원소는 [x, y] 형태이며 x, y는 정수입니다.
// 0 ≤ x, y ≤ 100
// 서로 다른 두개 이상의 점이 겹치는 경우는 없습니다.
// 두 직선이 겹치는 경우(일치하는 경우)에도 1을 return 해주세요.
// 임의의 두 점을 이은 직선이 x축 또는 y축과 평행한 경우는 주어지지 않습니다.
// 입출력 예
// dots	result
// [[1, 4], [9, 2], [3, 8], [11, 6]]	1
// [[3, 5], [4, 1], [2, 4], [5, 10]]	0
// 입출력 예 설명
// 입출력 예 #1
// 
// 점 [1, 4], [3, 8]을 잇고 [9, 2], [11, 6]를 이으면 두 선분은 평행합니다.
// 입출력 예 #2
// 
// 점을 어떻게 연결해도 평행하지 않습니다.

// 일단 두 선이 평행일 때는 그 두 점간의 간격이 일치함
// 그러면 간격이 일치하는 점의 쌍을 찾아야하고 토너먼트 시켜야한다.
function solve(dots) {
    let arr = []

    for (let i = 0; i < dots.length; i++) {
        for (let j = i + 1; j < dots.length; j++) {
            arr.push((dots[j][0] - dots[i][0]) / (dots[j][1] - dots[i][1]))
        }
    }
    console.log(arr)
    for (let i = 0; i < arr.length; i++) {
        for (let j = i + 1; j < arr.length; j++) {
            if (arr[i] === arr[j]) {
                return 1
            }
        }
    }
    return 0
}
// 테스트 케이스 몇개가 불충분하다. 왜 ??
// console.log(solve([[1, 2], [5, 1], [3, 6], [6, 3]]))
console.log(solve([[1, 1], [2, 2], [3, 3], [4, 0]]))
// console.log(solve([[1, 4], [9, 2], [3, 8], [11, 6]]))
// 해당 테스트케이스처럼 두 직선의 길이는 다르지만 기울기가 같은 경우이다.
// 좌표로 계산하는 것은 불가능하다. 기울기를 구하는 공식을 사용해야한다.
// 문제를 다시 잘 읽어 보니 평행한 것이 하나라도 있으면 갯수와 상관 없이 1을 return 하면 됐다.
// 하지만 또 미스가 존재했다. 예를들어서 두 직선에 만약 같은 점을 사용하는 직선이 있다면 ?
// 기울기는 같지만 그것은 두 직선이라고 할 수 없다.

function solve2(dots) {
    if (((dots[1][0] - dots[0][0]) / (dots[1][1] - dots[0][1])) === ((dots[3][0] - dots[2][0]) / (dots[3][1] - dots[2][1]))) return 1
    else if (((dots[2][0] - dots[0][0]) / (dots[2][1] - dots[0][1])) === ((dots[3][0] - dots[1][0]) / (dots[3][1] - dots[1][1]))) return 1
    else if (((dots[2][0] - dots[1][0]) / (dots[2][1] - dots[1][1])) === ((dots[3][0] - dots[0][0]) / (dots[3][1] - dots[0][1]))) return 1
    return 0
}
// 이렇게 풀어 보긴 했는데..
// 점이 네개니 망정이지.. 무지성이였다. 다른 더 좋은 방법은 없나
// 다들 나랑 비슷했다. 허나 클린코드적으로 기울기 구하는 함수를 분리했다 정도.